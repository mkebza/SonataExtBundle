services:
    _defaults:
        bind:
            $templating: '@templating'
            $translator: '@translator'
            $dispatcher: '@Symfony\Component\EventDispatcher\EventDispatcherInterface'
            $em: '@Doctrine\ORM\EntityManagerInterface'
            $notificator: '@MKebza\Notificator\Notificator'
            $appLogger: '@monolog.logger.app_action'
            $requestStack: '@request_stack'

            $userEntityName: '%sonata_ext.user_entity%'

    MKebza\SonataExt\Controller\:
        resource: '../../Controller'
        tags: ['controller.service_arguments']

    MKebza\SonataExt\Sonata\RoleSecurityHandler:
        arguments:
            $authorizationChecker: "@security.authorization_checker"
            $superAdminRoles:
                - ROLE_SUPER_ADMIN

    MKebza\SonataExt\Service\Logger\UserProvider:
        arguments:
            $tokenStorage: '@Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface'

#    MKebza\SonataExt\Block\CronMonitorBlock:
#        tags:
#            - { name: 'sonata.block' }

    MKebza\SonataExt\Repository\LogRepository:
        arguments:
            $registry: '@Symfony\Bridge\Doctrine\RegistryInterface'
        tags:
            - { name: 'doctrine.repository_service' }

    MKebza\SonataExt\Repository\UserLoginAttemptRepository:
        arguments:
            $registry: '@Symfony\Bridge\Doctrine\RegistryInterface'
        tags:
        - { name: 'doctrine.repository_service' }

    MKebza\SonataExt\EventListener\Workflow\WorkflowLoggableSubscriber:
        arguments:
            $logger: '@monolog.logger.app_workflow'
        tags:
            - { name: 'kernel.event_subscriber' }

    MKebza\SonataExt\Service\Cron\CronManager:
        arguments:
            $slugger: '@Cocur\Slugify\SlugifyInterface'

    sonata_ext.cron_manager:
        alias: MKebza\SonataExt\Service\Cron\CronManager
        public: true

    MKebza\SonataExt\EventListener\Notificator\NotificatorLoggerSubscriber:
        arguments:
            $logger: '@monolog.logger.app_notification'
        tags:
            - { name: 'kernel.event_subscriber' }

    MKebza\SonataExt\Utils\TokenGeneratorInterface:
        alias: MKebza\SonataExt\Utils\TokenGenerator

    MKebza\SonataExt\Utils\TokenGenerator: ~

    MKebza\SonataExt\Service\Fixture\Provider\PhoneNumberProvider:
        arguments:
            $phoneNumberUtil: '@libphonenumber.phone_number_util'
        tags: ['nelmio_alice.faker.provider']

    MKebza\SonataExt\Service\Fixture\Provider\MoneyProvider:
        tags: ['nelmio_alice.faker.provider']

    MKebza\SonataExt\Service\Fixture\Provider\DateIntervalProvider:
        tags: ['nelmio_alice.faker.provider']

    MKebza\SonataExt\Service\Fixture\Provider\DatetimeProvider:
        tags: ['nelmio_alice.faker.provider']

    MKebza\SonataExt\Service\Fixture\Provider\EnumProvider:
        tags: ['nelmio_alice.faker.provider']


    ####################################################################################################################
#    MKebza\SonataExt\DataFixture\Processor\UserProcessor:
#        tags:
#            - { name: 'the' }

    # Notification
    MKebza\SonataExt\Notification\Security\ResetPasswordRequestNotification:
        tags: ['mkebza_notificator.notification']

    # Timestampable
    MKebza\SonataExt\EventListener\Timestampable\TimestampableSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    ####################################################################################################################
    # Security
    MKebza\SonataExt\DataFixture\Processor\UserProcessor:
        arguments:
            $encoder: '@Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface'
        tags:
            - { name: 'fidry_alice_data_fixtures.processor' }

    MKebza\SonataExt\EventListener\Security\AuthenticationLoggerSubscriber:
        arguments:
            $attemptRepository: '@MKebza\SonataExt\Repository\UserLoginAttemptRepository'
        tags:
            - { name: 'kernel.event_subscriber' }

    MKebza\SonataExt\Service\Security\ResetPasswordAction:
        arguments:
            $encoder: '@Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface'

    MKebza\SonataExt\Service\Security\ChangePasswordAction:
        arguments:
            $encoder: '@Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface'

    MKebza\SonataExt\Service\Security\ResetPasswordRequestAction:
        arguments:
            $tokenGenerator: '@MKebza\SonataExt\Utils\TokenGenerator'



    ####################################################################################################################
    # Commands
    MKebza\SonataExt\Command\RoleExportCommand:
        tags:
            - { name: 'console.command' }

    ####################################################################################################################
    # Action log
    MKebza\SonataExt\EventListener\Logger\CreateLoggableRelationSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    MKebza\SonataExt\EventListener\Logger\LoggableMapDiscriminatorSubscriber:
        tags:
        - { name: doctrine.event_subscriber, connection: default }

    MKebza\SonataExt\EventListener\EntityLoggerSubscriber:
        arguments:
            $userProvider: '@MKebza\SonataExt\Service\Logger\UserProvider'
            $channel: 'entity'
        tags:
            - { name: doctrine.event_subscriber, connection: default }


    MKebza\SonataExt\EventListener\LoggerSubscriber:
        tags:
            - { name: 'kernel.event_subscriber' }

    MKebza\SonataExt\Service\Logger\AssignToEntityHandler:
        arguments:
            $userProvider: '@MKebza\SonataExt\Service\Logger\UserProvider'

    # Sonata
    MKebza\SonataExt\EventListener\Sonata\MenuDashboardSubscriber:
        tags:
            - { name: kernel.event_subscriber }

    # Others
    MKebza\SonataExt\EventListener\CommandInfoSubscriber:
        arguments:
            $stopwatch: '@Symfony\Component\Stopwatch\Stopwatch'
        tags:
            - { name: kernel.event_subscriber }

    NotFloran\MjmlBundle\SwiftMailer\MjmlPlugin:
        arguments:
            $mjml: '@NotFloran\MjmlBundle\Mjml'
        tags: [swiftmailer.default.plugin]

    ####################################################################################################################
    # Forms
    MKebza\SonataExt\Form\Type\UserGroup\UserGroupSecurityRolesType:
       tags:
           - { name: form.type }
       arguments:
           $roles: '%security.role_hierarchy.roles%'


    MKebza\SonataExt\Form\Type\TemplateType:
        tags:
            - { name: form.type }

    MKebza\SonataExt\EventListener\Sluggable\SluggableSubscriber:
        arguments:
            $slugger: '@Cocur\Slugify\SlugifyInterface'

        tags: ['doctrine.event_subscriber']

    MKebza\SonataExt\Twig\Extension\LastLoginExtension:
        tags: ['twig.extension']

    MKebza\SonataExt\Twig\Runtime\LastLoginRuntime:
        arguments:
            $repository: '@MKebza\SonataExt\Repository\UserLoginAttemptRepository'
        tags: ['twig.runtime']

    MKebza\SonataExt\Twig\Extension\FilesizeExtension:
        tags: ['twig.extension']

    MKebza\SonataExt\Twig\Runtime\FilesizeRuntime:
        tags: ['twig.runtime']

    MKebza\SonataExt\Twig\Extension\TypeTestExtension:
        tags: ['twig.extension']

    MKebza\SonataExt\Twig\Runtime\TypeTestRuntime:
        tags: ['twig.runtime']

    MKebza\SonataExt\Twig\Extension\TextExtension:
        tags: ['twig.extension']

    MKebza\SonataExt\Twig\Runtime\TextRuntime:
        tags: ['twig.runtime']

    MKebza\SonataExt\Twig\Runtime\EnumRuntime:
        tags: ['twig.runtime']

    MKebza\SonataExt\Twig\Extension\EnumExtension:
        tags: ['twig.extension']